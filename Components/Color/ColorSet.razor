<div class="grid__row align-items--center">
	<ColorDisplay Color="Color" />
	<div class="grid grid__row gap--none desktop--span-8">
		<div class="span-6 mobile-portrait--span-12 tablet--span-3 grid gap--none @Color.CssClass state--hover state--active">
			<small class="padding typography--truncate">@Color.Name</small>
			<small class="padding typography--truncate typography__align--right">.@Color.CssClass</small>
		</div>
		<div class="span-6 mobile-portrait--span-4 tablet--span-3 grid gap--none on-@(Color.CssClass) state--hover state--active">
			<small class="padding typography--truncate">On @Color.Name CssClass</small>
			<small class="padding typography--truncate typography__align--right">.on-@(Color.CssClass)</small>
		</div>
		<div class="span-6 mobile-portrait--span-4 tablet--span-3 grid gap--none @(Color.CssClass)-container state--hover state--active">
			<small class="padding typography--truncate">@Color.Name container</small>
			<small class="padding typography--truncate typography__align--right">.@(Color.CssClass)-container</small>
		</div>
		<div class="span-6 mobile-portrait--span-4 tablet--span-3 grid gap--none on-@(Color.CssClass)-container state--hover state--active">
			<small class="padding typography--truncate">On @Color.Name container</small>
			<small class="padding typography--truncate typography__align--right">.on-@(Color.CssClass)-container</small>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public BEMColor Color { get; set; } = null!;
}
